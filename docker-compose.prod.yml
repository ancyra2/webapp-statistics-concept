services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "${FRONTEND_PORT}:80"
    environment:
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
      - NODE_ENV=production
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - my-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
      - NODE_ENV=production
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:prod
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

# Dockerizing for production
# docker-compose --env-file .env.prod -f docker-compose.prod.yml up --build
